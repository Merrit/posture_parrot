# Create a new release

name: Release

on:
  # Build & deploy for tag events matching v*, i.e. v1.0.0, v20.15.10
  push:
    tags:
      - "v*"

concurrency:
  group: ci-release-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  call-tests:
    uses: ./.github/workflows/tests.yml

  call-build-linux:
    needs: call-tests
    uses: ./.github/workflows/build-linux.yml
    with:
      pre-release: false
    secrets: inherit
  call-build-windows:
    needs: call-tests
    uses: ./.github/workflows/build-windows.yml
    with:
      pre-release: false
    secrets: inherit

  release:
    name: "Release"
    needs: [call-build-linux, call-build-windows]
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Development Release & Upload artifacts
        run: |
          # Create a new release
          release_id=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"
          tag_name\": \"${{ github.ref }}\",
          \"name\": \"Release ${{ github.ref }}\",
          \"body\": \"\",
          \"draft\": false,
          \"prerelease\": false
          }" "https://api.github.com/repos/${{ github.repository }}/releases" | jq -r '.id')

          # Upload the artifacts
          for file in $(find ${{ github.workspace }}/artifacts -type f); do
            echo "Uploading $file"
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@$file" "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$(basename $file)"
          done
